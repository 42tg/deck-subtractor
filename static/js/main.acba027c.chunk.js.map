{"version":3,"sources":["App.tsx","examples/Base.txt","examples/Subtract.txt","index.tsx"],"names":["toObject","produce","txtFile","split","map","line","join","filter","parseInt","reduce","prev","count","name","App","useState","base","setBase","subtract","setSubstract","result","setResult","ThemeProvider","theme","createMuiTheme","className","TextField","label","multiline","rows","defaultValue","onChange","e","target","value","variant","style","width","Button","color","onClick","baseObj","subtractObj","obj","Object","entries","key","forEach","margin","length","ReactDOM","render","document","getElementById"],"mappings":"0UAiBMA,EAAWC,aAAQ,SAACC,GAAD,OACrBA,EACKC,MAAM,MACNC,KAAI,SAACC,GAAD,OAAkBA,EAAKF,MAAM,QACjCC,KAAI,uCAAgC,CAAhC,gBAA6CE,KAAK,SACtDC,QAAO,SAACF,GAAD,OAAoBG,SAASH,EAAK,GAAI,OAC7CI,QACG,SAACC,EAAD,0BAAYC,EAAZ,KAAmBC,EAAnB,2BACOF,EADP,eAEKE,EAAOJ,SAASG,EAAO,QAE5B,OAqFGE,EAjFO,WAAO,IAAD,EACAC,mBCjCb,k2CDgCa,mBACjBC,EADiB,KACXC,EADW,OAESF,mBElCtB,k2CFgCa,mBAEjBG,EAFiB,KAEPC,EAFO,OAGIJ,mBAAS,IAHb,mBAGjBK,EAHiB,KAGTC,EAHS,KA6BxB,OACI,kBAACC,EAAA,EAAD,CAAeC,MAAOC,eAClB,6BACI,yBAAKC,UAAU,OACX,kBAACC,EAAA,EAAD,CACIC,MAAM,SACNC,WAAS,EACTC,KArDF,GAsDEC,aAAcd,EACde,SAAU,SAAAC,GAAC,OAAIf,EAAQf,aAAQ,kBAAM8B,EAAEC,OAAOC,WAC9CC,QAAQ,WACRC,MAAO,CAAEC,MAAO,UAEpB,kBAACC,EAAA,EAAD,CACIH,QAAQ,YACRI,MAAM,UACNC,QAxCJ,WACZ,IAAMC,EAAUxC,EAASe,GACnB0B,EAAczC,EAASiB,GAE7BG,EACInB,aAAQ,WACJ,IAAMyC,EAAMC,OAAOC,QAAQJ,GAAS/B,QAChC,SAACC,EAAD,0BAAQmC,EAAR,KAAaZ,EAAb,2BACOvB,EADP,eAEKmC,EAAMZ,MAEX,IASJ,OAPAU,OAAOC,QAAQH,GAAaK,SACxB,YAAqC,IAAD,mBAAlCD,EAAkC,KAA7BZ,EAA6B,KAC5BS,EAAIG,KACJH,EAAIG,GAAOH,EAAIG,GAAOZ,MAI3BS,OAqBCP,MAAO,CAAEY,OAAQ,SAJrB,qBAQA,kBAACtB,EAAA,EAAD,CACIC,MAAM,cACNC,WAAS,EACTC,KAtEF,GAuEEE,SAAU,SAAAC,GAAC,OACPb,EAAajB,aAAQ,kBAAM8B,EAAEC,OAAOC,WAExCJ,aAAcZ,EACdiB,QAAQ,WACRC,MAAO,CAAEC,MAAO,WAGvBO,OAAOC,QAAQzB,GAAQ6B,OAAS,GAC7B,yBAAKxB,UAAU,cACX,6BACKmB,OAAOC,QAAQzB,GAAQf,KAAI,mCAAEyC,EAAF,KAAOZ,EAAP,YACxB,yBACIY,IAAKA,EACLrB,UAAWS,EAAQ,EAAI,QAAU,OAEhCA,EAJL,IAIaY,WGjG7CI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.acba027c.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport {\r\n    Button,\r\n    TextField,\r\n    ThemeProvider,\r\n    createMuiTheme,\r\n} from \"@material-ui/core\"\r\nimport \"./App.css\"\r\nimport { produce } from \"immer\"\r\n\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport Base from \"!raw-loader!./examples/Base.txt\"\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport Subtract from \"!raw-loader!./examples/Subtract.txt\"\r\n\r\nconst CONSTANT_ROWS = 20\r\n\r\nconst toObject = produce((txtFile: string) =>\r\n    txtFile\r\n        .split(\"\\n\")\r\n        .map((line: string) => line.split(\" \"))\r\n        .map(([count, ...name]: string[]) => [count, name.join(\" \")])\r\n        .filter((line: string[]) => parseInt(line[0], 10))\r\n        .reduce(\r\n            (prev: {}, [count, name]: string[]) => ({\r\n                ...prev,\r\n                [name]: parseInt(count, 10),\r\n            }),\r\n            {},\r\n        ),\r\n)\r\n\r\nconst App: React.FC = () => {\r\n    const [base, setBase] = useState(Base)\r\n    const [subtract, setSubstract] = useState(Subtract)\r\n    const [result, setResult] = useState({})\r\n\r\n    const getDiff = () => {\r\n        const baseObj = toObject(base)\r\n        const subtractObj = toObject(subtract)\r\n\r\n        setResult(\r\n            produce(() => {\r\n                const obj = Object.entries(baseObj).reduce(\r\n                    (prev, [key, value]: [string, number]) => ({\r\n                        ...prev,\r\n                        [key]: value,\r\n                    }),\r\n                    {},\r\n                )\r\n                Object.entries(subtractObj).forEach(\r\n                    ([key, value]: [string, number]) => {\r\n                        if (obj[key]) {\r\n                            obj[key] = obj[key] - value\r\n                        }\r\n                    },\r\n                )\r\n                return obj\r\n            }),\r\n        )\r\n    }\r\n    return (\r\n        <ThemeProvider theme={createMuiTheme()}>\r\n            <div>\r\n                <div className=\"App\">\r\n                    <TextField\r\n                        label=\"To Buy\"\r\n                        multiline\r\n                        rows={CONSTANT_ROWS}\r\n                        defaultValue={base}\r\n                        onChange={e => setBase(produce(() => e.target.value))}\r\n                        variant=\"outlined\"\r\n                        style={{ width: \"100%\" }}\r\n                    ></TextField>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={getDiff}\r\n                        style={{ margin: \"20px\" }}\r\n                    >\r\n                        Calculate Buylist\r\n                    </Button>\r\n                    <TextField\r\n                        label=\"Already Own\"\r\n                        multiline\r\n                        rows={CONSTANT_ROWS}\r\n                        onChange={e =>\r\n                            setSubstract(produce(() => e.target.value))\r\n                        }\r\n                        defaultValue={subtract}\r\n                        variant=\"outlined\"\r\n                        style={{ width: \"100%\" }}\r\n                    ></TextField>\r\n                </div>\r\n                {Object.entries(result).length > 0 && (\r\n                    <div className=\"App column\">\r\n                        <div>\r\n                            {Object.entries(result).map(([key, value]) => (\r\n                                <div\r\n                                    key={key}\r\n                                    className={value > 0 ? \"green\" : \"red\"}\r\n                                >\r\n                                    {value} {key}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","export default \"MAINDECK 100\\nCreature 18\\n1 Bellowing Tanglewurm\\n1 Brutalizer Exarch\\n1 Copperhorn Scout\\n1 Creeperhulk\\n1 Elder Druid\\n1 Elder of Laurels\\n1 Elvish Mystic\\n1 Elvish Visionary\\n1 Fyndhorn Brownie\\n1 Gigantomancer\\n1 Great Oak Guardian\\n1 Llanowar Elves\\n1 Marwyn, the Nurturer\\n1 Multani's Acolyte\\n1 Sandstone Oracle\\n1 Ursapine\\n1 Voice of Many\\n1 Wildheart Invoker\\nSpell 49\\n1 Aim High\\n1 Alpha Authority\\n1 Blanchwood Armor\\n1 Boar Umbra\\n1 Burst of Strength\\n1 Centaur Glade\\n1 Colossal Heroics\\n1 Colossal Majesty\\n1 Conqueror's Galleon\\n1 Curse of Bounty\\n1 Dragonscale Boon\\n1 Emerald Charm\\n1 Epic Proportions\\n1 Fleetfeather Sandals\\n1 Fortitude\\n1 Gift of Growth\\n1 Gigantiform\\n1 Horn of Plenty\\n1 Hunter's Prowess\\n1 Hurricane\\n1 Jandor's Saddlebags\\n1 Key to the City\\n1 Loreseeker's Stone\\n1 Malachite Talisman\\n1 Mortal's Resolve\\n1 Naturalize\\n1 Once and Future\\n1 Ornamental Courage\\n1 Prodigious Growth\\n1 Regrowth\\n1 Restock\\n1 Return to Nature\\n1 Revive\\n1 Ruthless Instincts\\n1 Sacred Armory\\n1 Savage Surge\\n1 Season of Growth\\n1 Seedling Charm\\n1 Snake Umbra\\n1 Soul's Might\\n1 Spider Umbra\\n1 Spidery Grasp\\n1 Steady Aim\\n1 Stony Strength\\n1 Synchronized Strike\\n1 Touch of Vitae\\n1 Vines of the Recluse\\n1 Wildest Dreams\\n1 Withstand Death\\nLand 33\\n1 Desert of the Indomitable\\n29 Forest\\n1 Slippery Karst\\n1 Tranquil Thicket\\n1 Treetop Village\";","export default \"MAINDECK 100\\nCreature 18\\n1 Bellowing Tanglewurm\\n1 Brutalizer Exarch\\n1 Copperhorn Scout\\n1 Creeperhulk\\n1 Elder Druid\\n1 Elder of Laurels\\n1 Elvish Mystic\\n1 Elvish Visionary\\n1 Fyndhorn Brownie\\n1 Gigantomancer\\n1 Great Oak Guardian\\n1 Llanowar Elves\\n1 Marwyn, the Nurturer\\n1 Multani's Acolyte\\n1 Sandstone Oracle\\n1 Ursapine\\n1 Voice of Many\\n1 Wildheart Invoker\\nSpell 49\\n1 Aim High\\n1 Alpha Authority\\n1 Blanchwood Armor\\n1 Boar Umbra\\n1 Burst of Strength\\n1 Centaur Glade\\n1 Colossal Heroics\\n1 Colossal Majesty\\n1 Conqueror's Galleon\\n1 Curse of Bounty\\n1 Dragonscale Boon\\n1 Emerald Charm\\n1 Epic Proportions\\n1 Fleetfeather Sandals\\n1 Fortitude\\n1 Gift of Growth\\n1 Gigantiform\\n1 Horn of Plenty\\n1 Hunter's Prowess\\n1 Hurricane\\n1 Jandor's Saddlebags\\n1 Key to the City\\n1 Loreseeker's Stone\\n1 Malachite Talisman\\n1 Mortal's Resolve\\n1 Naturalize\\n1 Once and Future\\n1 Ornamental Courage\\n1 Prodigious Growth\\n1 Regrowth\\n1 Restock\\n1 Return to Nature\\n1 Revive\\n1 Ruthless Instincts\\n1 Sacred Armory\\n1 Savage Surge\\n1 Season of Growth\\n1 Seedling Charm\\n1 Snake Umbra\\n1 Soul's Might\\n1 Spider Umbra\\n1 Spidery Grasp\\n1 Steady Aim\\n1 Stony Strength\\n1 Synchronized Strike\\n1 Touch of Vitae\\n1 Vines of the Recluse\\n1 Wildest Dreams\\n1 Withstand Death\\nLand 33\\n1 Desert of the Indomitable\\n29 Forest\\n1 Slippery Karst\\n1 Tranquil Thicket\\n1 Treetop Village\";","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}